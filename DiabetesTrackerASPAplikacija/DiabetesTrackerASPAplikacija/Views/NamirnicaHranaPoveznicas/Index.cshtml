@model IEnumerable<DiabetesTrackerASPAplikacija.Models.NamirnicaHranaPoveznica>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>


        <th>
            @Html.DisplayNameFor(model => model.NamirnicaId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.HranaId)
        </th>
        <th></th>
    </tr>

    @{
        {
            var db = new DiabetesTrackerASPAplikacija.Models.DiabetesTrackerASPAplikacijaContext();
            var dajUnoseHraneKorisnika = db.Database.SqlQuery<DiabetesTrackerASPAplikacija.Models.UnosHrane>("SELECT * FROM dbo.UnosHrane, dbo.Korisnik WHERE " + "dbo.Korisnik.EMail = '" + User.Identity.Name + "' AND dbo.Korisnik.Id=dbo.UnosHrane.KorisnikId").ToList();

            var dajSveNamirnice = db.Database.SqlQuery<DiabetesTrackerASPAplikacija.Models.Namirnica>("SELECT * FROM dbo.Namirnica").ToList();

            var dajSvePoveznice = db.Database.SqlQuery<DiabetesTrackerASPAplikacija.Models.NamirnicaHranaPoveznica>("SELECT * FROM dbo.NamirnicaHranaPoveznica").ToList();

            foreach (var p in dajSvePoveznice)
            {
                foreach (var n in dajSveNamirnice)
                {
                    if (n.Id == p.NamirnicaId)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => p.NamirnicaId)
                            </td>
                        </tr>
                    }
                }

                foreach (var u in dajUnoseHraneKorisnika)
                {
                    if (u.Id == p.HranaId)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => p.HranaId)
                            </td>
                        </tr>
                    }
                }
            }

            
        }
    }
</table>
